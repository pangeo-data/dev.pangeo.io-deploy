pangeo:
  # Pangeo configuration values
  # --------------------
  # The following configuration options are specifically for the custom Pangeo components.
  # Some values will be inherited into the dependent chart configs. See requirements.yaml for info.

  # Create and use roles and service accounts on an RBAC enabled cluster.
  rbac:
    enabled: true


  # Dependency configuration values
  # -------------------------------
  # To configure dependencies you must create a key with the name of the dependency
  # and then configure as per the dependent chart's values.yaml. Don't forget to indent!

  jupyterhub:
    # Helm config for jupyterhub goes here
    # See https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/master/jupyterhub/values.yaml

    singleuser:
      cpu:
        limit: 2
        guarantee: 1
      memory:
        limit: 4G
        guarantee: 2G

    prePuller:
      hook:
        enabled: false

    scheduling:
      userScheduler:
        enabled: true
      podPriority:
        enabled: true
      userPlaceholder:
        enabled: false
  dask-gateway:
    gateway:
      clusterManager:
        image:
          name: pangeo/base-notebook
          tag: 2019.12.24
        clusterStartTimeout: 600
        workerStartTimeout: 600
        worker:
          extraPodConfig:
            tolerations:
              - key: "k8s.dask.org_dedicated"
                operator: "Equal"
                value: "worker"
        scheduler:
          extraPodConfig:
            tolerations:
              - key: "k8s.dask.org_dedicated"
                operator: "Equal"
                value: "worker"
      extraConfig:
        # Use the mapping form, to support merging multiple values.yaml
        optionHandler: |
          from dask_gateway_server.options import Options, Integer, Float, String

          def option_handler(options):
              if ":" not in options.image:
                  raise ValueError("When specifying an image you must also provide a tag")
              return {
                  "worker_cores_limit": options.worker_cores,
                  "worker_cores": min(options.worker_cores / 2, 1),
                  "worker_memory": "%fG" % options.worker_memory,
                  "image": options.image,
              }
          c.DaskGateway.cluster_manager_options = Options(
              Integer("worker_cores", 2, min=1, max=4, label="Worker Cores"),
              Float("worker_memory", 4, min=1, max=8, label="Worker Memory (GiB)"),
              String("image", default="pangeo/base-notebook:2019.12.24", label="Image"),
              handler=option_handler,
          )

        userLimts: |
          c.UserLimits.max_cores = 100
          c.UserLimits.max_memory = "400 G"
          c.UserLimits.max_clusters = 1

homeDirectories:
  nfs:
    enabled: false
  
